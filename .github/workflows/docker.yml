name: Build Docker Images

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distribution:
          - alpine3.11
          - alpine3.12
          - alpine3.13
          - alpine3.14
          - buster
          - slim-buster
          - bullseye
          - slim-bullseye
        dictionary:
          - ipadic
          - jumandic
    steps:
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: actions/checkout@v2

      - id: tag
        name: get the tag name
        shell: python
        run: |
          ref = "${{ github.ref }}"
          units = ref.split("/")
          name = units[2] if units[1] == "tags" else ""
          print(f"::set-output name=name::{name}")

      - name: build
        run: |
          docker buildx build --pull --platform linux/amd64,linux/arm64 .
        working-directory: ${{ matrix.dictionary }}/${{ matrix.distribution }}

      - name: Publish to DockerHub
        if: steps.tag.outputs.name != ''
        run: |
          printenv PASSWORD | docker login --username "$USERNAME" --password-stdin
          docker buildx build --push --platform linux/amd64,linux/arm64 -t "$USERNAME/mecab:${{ matrix.dictionary }}-${{ matrix.distribution }}" .
          docker buildx build --push --platform linux/amd64,linux/arm64 -t "$USERNAME/mecab:${{ matrix.dictionary }}-${{ matrix.distribution }}-${{ steps.tag.outputs.name }}" .
          docker logout
        working-directory: ${{ matrix.dictionary }}/${{ matrix.distribution }}
        env:
          USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Publish to GitHub Packages Container registry
        if: steps.tag.outputs.name != ''
        run: |
          printenv PASSWORD | docker login ghcr.io --username "$USERNAME" --password-stdin
          docker buildx build --push --platform linux/amd64,linux/arm64 -t "ghcr.io/$USERNAME/mecab:${{ matrix.dictionary }}-${{ matrix.distribution }}" .
          docker buildx build --push --platform linux/amd64,linux/arm64 -t "ghcr.io/$USERNAME/mecab:${{ matrix.dictionary }}-${{ matrix.distribution }}-${{ steps.tag.outputs.name }}" .
          docker logout
        working-directory: ${{ matrix.dictionary }}/${{ matrix.distribution }}
        env:
          USERNAME: ${{ github.repository_owner }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS Credentials
        uses: fuller-inc/actions-aws-assume-role@v1
        continue-on-error: true
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::445285296882:role/mecab-ecr-DeploymentRole-HLLU42OOK2YJ
          role-session-tagging: true

      - name: Publish to ECR Public Registry
        if: steps.tag.outputs.name != ''
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/shogo82148s
          docker buildx build --push --platform linux/amd64,linux/arm64 -t "public.ecr.aws/shogo82148/mecab:${{ matrix.dictionary }}-${{ matrix.distribution }}" .
          docker buildx build --push --platform linux/amd64,linux/arm64 -t "public.ecr.aws/shogo82148/mecab:${{ matrix.dictionary }}-${{ matrix.distribution }}-${{ steps.tag.outputs.name }}" .
          docker logout
        working-directory: ${{ matrix.dictionary }}/${{ matrix.distribution }}
